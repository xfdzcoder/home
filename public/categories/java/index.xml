<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java on XFDZ&#39;s Blog</title>
    <link>http://localhost:1313/categories/java/</link>
    <description>Recent content in Java on XFDZ&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>zh-us</language>
    <lastBuildDate>Wed, 31 Jul 2024 20:03:17 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/categories/java/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>synchronized 的升级机制</title>
      <link>http://localhost:1313/7224233674005610509/</link>
      <pubDate>Tue, 30 Jul 2024 11:12:26 +0800</pubDate>
      <guid>http://localhost:1313/7224233674005610509/</guid>
      <description>引言 都 4202 年了，不会还有人以为 synchronized 就是重量级锁吧~，参考：浅析synchronized锁升级的原理与实现 - 小新成长之路 - 博客园 (cnblogs.com) 在看本章之前，您</description>
    </item>
    <item>
      <title>从0到N搭建微服务项目</title>
      <link>http://localhost:1313/7224237482966319107/</link>
      <pubDate>Thu, 30 May 2024 12:16:26 +0800</pubDate>
      <guid>http://localhost:1313/7224237482966319107/</guid>
      <description>0 技术体系 ： SpringCloud SpringCloud Alibaba SpringCloud Alibaba Nacos SpringCloud Feign SpringCloud Gateway 1 模块设计 cloud01-demo api-gateway API 网关模块。集中了所有服务的接口，并根据请求url将请求转发到对应的微服务上 user-services-module 用户服务。负责处</description>
    </item>
    <item>
      <title>SpringMVC中整合的Jackson从请求体解析参数流程的源码分析</title>
      <link>http://localhost:1313/7224237482966319105/</link>
      <pubDate>Fri, 22 Mar 2024 16:35:09 +0800</pubDate>
      <guid>http://localhost:1313/7224237482966319105/</guid>
      <description>SpringMVC中整合的Jackson从请求体解析参数流程的源码分析 环境： springboot: 2.7.6 废话不多写，发车了。 还是从老熟人DispatcherServ</description>
    </item>
    <item>
      <title>@SuppressWarnings 注解</title>
      <link>http://localhost:1313/7224237482966319108/</link>
      <pubDate>Tue, 23 Jan 2024 20:58:26 +0800</pubDate>
      <guid>http://localhost:1313/7224237482966319108/</guid>
      <description>例如： 抑制多类型的警告：@SuppressWarnings(&amp;ldquo;unchecked&amp;rdquo;,&amp;ldquo;rawtypes&amp;</description>
    </item>
    <item>
      <title>springboot logbak-spring.xml 配置</title>
      <link>http://localhost:1313/7224233674005610515/</link>
      <pubDate>Thu, 18 Jan 2024 23:05:26 +0800</pubDate>
      <guid>http://localhost:1313/7224233674005610515/</guid>
      <description>网上CV的一个配置，感觉很不错，收藏一下 &amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt; &amp;lt;!-- scan：当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。</description>
    </item>
    <item>
      <title>SpringBoot 整合 腾讯云 API</title>
      <link>http://localhost:1313/7224233674005610514/</link>
      <pubDate>Tue, 09 Jan 2024 19:22:26 +0800</pubDate>
      <guid>http://localhost:1313/7224233674005610514/</guid>
      <description>SpringBoot 整合 腾讯云 API 此处假设腾讯云方面的配置大家都配置完毕了，下面直接开始与代码相关的。 0. 腾讯云 SDK 文档 Java-SDK 中心-腾讯云 (tencent.com) 1. 引入依赖 &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;com.tencentcloudapi&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;tencentcloud-sdk-java&amp;lt;/artifactId&amp;gt; &amp;lt;!-- go to https://search.maven.org/search?q=tencentcloud-sdk-java and get</description>
    </item>
    <item>
      <title>SpringBoot 整合 七牛云存储</title>
      <link>http://localhost:1313/7224233674005610513/</link>
      <pubDate>Sat, 30 Dec 2023 15:19:26 +0800</pubDate>
      <guid>http://localhost:1313/7224233674005610513/</guid>
      <description>SpringBoot 整合 七牛云存储 七牛云的注册及配置这里就不赘述了。 0. 七牛云存储 JavaSDK 官方文档 Java SDK_SDK 下载_对象存储 - 七牛开发者中心 (qiniu.com) 1. 引入依赖 &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;com.qiniu&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;qiniu-java-sdk&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;[7.7.0, 7.10.99]&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; 这里的ve</description>
    </item>
    <item>
      <title>SpringSecurity之用户认证</title>
      <link>http://localhost:1313/7224246078974263296/</link>
      <pubDate>Thu, 23 Nov 2023 20:58:26 +0800</pubDate>
      <guid>http://localhost:1313/7224246078974263296/</guid>
      <description>基础： Spring Security 是一个专注于为 Java 应用程序提供身份认证和授权的框架。推荐使用权限认证方式配置：SSM + Shiro;Springboot+SpringSecurity 身份认证（authentication），即</description>
    </item>
    <item>
      <title>SpringBoot 调用第三方接口时的公私钥管理</title>
      <link>http://localhost:1313/7224233674005610512/</link>
      <pubDate>Sat, 16 Sep 2023 16:44:36 +0800</pubDate>
      <guid>http://localhost:1313/7224233674005610512/</guid>
      <description>SpringBoot 调用第三方接口时的公私钥管理 前言 项目中或多或少的会使用到一些第三方的接口，而调用第三方接口一般会有密钥。例如微信小程序的 appid，sec</description>
    </item>
    <item>
      <title>自定义 @MultiParameterBody 解决 POST 请求时接收多参数问题</title>
      <link>http://localhost:1313/7224233674005610510/</link>
      <pubDate>Tue, 30 May 2023 10:16:26 +0800</pubDate>
      <guid>http://localhost:1313/7224233674005610510/</guid>
      <description>自定义 @MultiParameterBody 解决 POST 请求时接收多参数问题 背景： 单参数时： 当前端只使用 POST 传一个 String 时一般是这样的： axios({ url: &amp;#39;/xxx&amp;#39;, method: &amp;#39;POST&amp;#39;, data: { str: param } }) 此时只能定义一个实体类对象，其</description>
    </item>
    <item>
      <title>IDEA 与 服务器 Linux 开发</title>
      <link>http://localhost:1313/7224233674005610511/</link>
      <pubDate>Thu, 25 May 2023 22:19:29 +0800</pubDate>
      <guid>http://localhost:1313/7224233674005610511/</guid>
      <description>IDEA 与 服务器 Linux 开发 最终效果：服务器上有一份与本地相同的代码。 目的： 可随时更新项目并将其运行起来测试。 避免了一个小更新也要在本地打包然后上传并运</description>
    </item>
    <item>
      <title>SSM&#43;Shiro&#43;Redis纯注解环境搭建</title>
      <link>http://localhost:1313/7224237482966319107/</link>
      <pubDate>Wed, 23 Nov 2022 16:18:26 +0800</pubDate>
      <guid>http://localhost:1313/7224237482966319107/</guid>
      <description>首先根据业务拆分成 Permission 和 Club 两个模块。然后在父工程中添加依赖： 1. SpringWeb开发 1.1 添加依赖 &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-webmvc&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;5.2.22.RELEASE&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-test&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${spring.version}&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-jdbc&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${spring.version}&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; 1.2 添加容器启动配置</description>
    </item>
    <item>
      <title>SpringBoot&#43;MybatisPlus快速入门</title>
      <link>http://localhost:1313/7224237482966319104/</link>
      <pubDate>Wed, 28 Sep 2022 23:01:48 +0800</pubDate>
      <guid>http://localhost:1313/7224237482966319104/</guid>
      <description>快速从 Java 基础到 SpringBoot 后端开发</description>
    </item>
    <item>
      <title>Java核心技术卷二阅读笔记（4.1 ~ ）</title>
      <link>http://localhost:1313/7224233674005610504/</link>
      <pubDate>Thu, 23 Jun 2022 19:18:11 +0800</pubDate>
      <guid>http://localhost:1313/7224233674005610504/</guid>
      <description>《Java核心技术卷》阅读笔记，主要记录了自己学习过程中的遗漏点</description>
    </item>
    <item>
      <title>Java核心技术卷二阅读笔记（1.2 ~ 3.9）</title>
      <link>http://localhost:1313/7224233674005610503/</link>
      <pubDate>Thu, 12 May 2022 14:13:04 +0800</pubDate>
      <guid>http://localhost:1313/7224233674005610503/</guid>
      <description>《Java核心技术卷》阅读笔记，主要记录了自己学习过程中的遗漏点</description>
    </item>
    <item>
      <title>JDK 的动态代理之源码 DEBUG</title>
      <link>http://localhost:1313/7224233674005610508/</link>
      <pubDate>Thu, 12 May 2022 14:13:04 +0800</pubDate>
      <guid>http://localhost:1313/7224233674005610508/</guid>
      <description>废话不多说，上案例代码： public class Main { public static void main(String[] args) { // 先不用管，后面会提到 System.setProperty(&amp;#34;sun.misc.ProxyGenerator.saveGeneratedFiles&amp;#34;, &amp;#34;true&amp;#34;); // 创建一个代理类，该代理类由 Main.class.getClassLoader() 获取到的类加载器加载 // 并且实现 F 接口 // 该</description>
    </item>
    <item>
      <title>Java核心技术卷一阅读笔记（7.3 ~ 9.5.3）</title>
      <link>http://localhost:1313/7224233674005610506/</link>
      <pubDate>Sun, 20 Mar 2022 22:12:04 +0800</pubDate>
      <guid>http://localhost:1313/7224233674005610506/</guid>
      <description>《Java核心技术卷》阅读笔记，主要记录了自己学习过程中的遗漏点</description>
    </item>
    <item>
      <title>正则表达式</title>
      <link>http://localhost:1313/7224233674005610507/</link>
      <pubDate>Thu, 03 Mar 2022 19:11:45 +0800</pubDate>
      <guid>http://localhost:1313/7224233674005610507/</guid>
      <description>正则表达式 语法介绍： 按照功能分类：（大致 限定符 选择匹配符 分组组合和反向引用符 特殊字符 字符匹配符 定位符 元字符：转意号 \\ 需要用到转意符号的字符：</description>
    </item>
    <item>
      <title>HashSet 源码分析</title>
      <link>http://localhost:1313/7224237482966319106/</link>
      <pubDate>Mon, 17 Jan 2022 22:46:45 +0800</pubDate>
      <guid>http://localhost:1313/7224237482966319106/</guid>
      <description>P521-P525 跟着老韩读源码 感谢韩顺平老师！ 下面是视频地址 【零基础 快速学Java】韩顺平 零基础30天学会Java_哔哩哔哩_bilibili 干就完了！ 以</description>
    </item>
    <item>
      <title>Java核心技术卷一阅读笔记（1.1 ~ 7.2.5）</title>
      <link>http://localhost:1313/7224233674005610505/</link>
      <pubDate>Wed, 22 Dec 2021 21:33:09 +0800</pubDate>
      <guid>http://localhost:1313/7224233674005610505/</guid>
      <description>《Java核心技术卷》阅读笔记，主要记录了自己学习过程中的遗漏点</description>
    </item>
  </channel>
</rss>
