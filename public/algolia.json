[{"author":null,"categories":["Java"],"content":null,"date":1722309146,"description":"","dir":"post\\Java\\JUC\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":4300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1722427397,"objectID":"8bc67a84255a15d38bd7d2d4d2c074bb","permalink":"http://localhost:1313/7224233674005610509/","publishdate":"2024-07-30T11:12:26+08:00","readingtime":9,"relpermalink":"/7224233674005610509/","section":"post","summary":"引言 都 4202 年了，不会还有人以为 synchronized 就是重量级锁吧~，参考：浅析synchronized锁升级的原理与实现 - 小新成长之路 - 博客园 (cnblogs.com) 在看本章之前，您","tags":["top","JUC"],"title":"synchronized 的升级机制","type":"post","url":"/7224233674005610509/","weight":0,"wordcount":4288},{"author":null,"categories":["面试"],"content":null,"date":1722081797,"description":"","dir":"post\\求职\\Java后端\\面经\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":9300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1722340997,"objectID":"e2dc06e404bdb6cae25a0a35a5a3d0c7","permalink":"http://localhost:1313/7224233674005610497/","publishdate":"2024-07-27T20:03:17+08:00","readingtime":19,"relpermalink":"/7224233674005610497/","section":"post","summary":"记录牛友的面试经历，并自己搜集整理了一些答案仅供参考","tags":["top","面经"],"title":"一面面经","type":"post","url":"/7224233674005610497/","weight":0,"wordcount":9298},{"author":null,"categories":["MySQL"],"content":null,"date":1721525534,"description":"","dir":"post\\MySQL高级\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1721525534,"objectID":"394e1a62b3eb98062225a3fb8c522f1e","permalink":"http://localhost:1313/7224246078978457600/","publishdate":"2024-07-21T09:32:14+08:00","readingtime":1,"relpermalink":"/7224246078978457600/","section":"post","summary":"关于回表的疑问","tags":["mysql"],"title":"二级索引为什么不直接存储对应页地址","type":"post","url":"/7224246078978457600/","weight":0,"wordcount":132},{"author":null,"categories":["数据结构与算法"],"content":null,"date":1721371620,"description":"","dir":"post\\数据结构与算法\\树\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1721371620,"objectID":"4e7e061c914e9944a3f1243b8811225d","permalink":"http://localhost:1313/7224233674005610499/","publishdate":"2024-07-19T14:47:00+08:00","readingtime":2,"relpermalink":"/7224233674005610499/","section":"post","summary":"B+树的学习","tags":["树"],"title":"B+Tree","type":"post","url":"/7224233674005610499/","weight":0,"wordcount":794},{"author":null,"categories":["MySQL"],"content":null,"date":1721353972,"description":"","dir":"post\\MySQL高级\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1721353972,"objectID":"f82af04311e88cc8785e10329cb82d57","permalink":"http://localhost:1313/7224246078978457601/","publishdate":"2024-07-19T09:52:52+08:00","readingtime":3,"relpermalink":"/7224246078978457601/","section":"post","summary":"MySQL5和8中的数据库目录结构的异同","tags":["mysql"],"title":"mysql中datadir目录下的文件","type":"post","url":"/7224246078978457601/","weight":0,"wordcount":1005},{"author":null,"categories":["Java"],"content":null,"date":1717042586,"description":"","dir":"post\\Java\\SpringCloud\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1717042586,"objectID":"00cfb0d38ae8b005ab8eb871f78c689c","permalink":"http://localhost:1313/7224237482966319107/","publishdate":"2024-05-30T12:16:26+08:00","readingtime":4,"relpermalink":"/7224237482966319107/","section":"post","summary":"0 技术体系 ： SpringCloud SpringCloud Alibaba SpringCloud Alibaba Nacos SpringCloud Feign SpringCloud Gateway 1 模块设计 cloud01-demo api-gateway API 网关模块。集中了所有服务的接口，并根据请求url将请求转发到对应的微服务上 user-services-module 用户服务。负责处","tags":["top","springcloud"],"title":"从0到N搭建微服务项目","type":"post","url":"/7224237482966319107/","weight":0,"wordcount":1873},{"author":null,"categories":["Java"],"content":null,"date":1711096509,"description":"","dir":"post\\Java\\SSM\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":4300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1711096509,"objectID":"1fc95ae52acb50c4d32de2ed4479d033","permalink":"http://localhost:1313/7224237482966319105/","publishdate":"2024-03-22T16:35:09+08:00","readingtime":9,"relpermalink":"/7224237482966319105/","section":"post","summary":"SpringMVC中整合的Jackson从请求体解析参数流程的源码分析 环境： springboot: 2.7.6 废话不多写，发车了。 还是从老熟人DispatcherServ","tags":["top","ssm"],"title":"SpringMVC中整合的Jackson从请求体解析参数流程的源码分析","type":"post","url":"/7224237482966319105/","weight":0,"wordcount":4202},{"author":null,"categories":["Java"],"content":null,"date":1706014706,"description":"","dir":"post\\Java\\SpringBoot\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1706014706,"objectID":"645ef3b1be68a9d1f183fcd37908c659","permalink":"http://localhost:1313/7224237482966319108/","publishdate":"2024-01-23T20:58:26+08:00","readingtime":1,"relpermalink":"/7224237482966319108/","section":"post","summary":"例如： 抑制多类型的警告：@SuppressWarnings(\u0026ldquo;unchecked\u0026rdquo;,\u0026ldquo;rawtypes\u0026","tags":["springboot"],"title":"@SuppressWarnings 注解","type":"post","url":"/7224237482966319108/","weight":0,"wordcount":388},{"author":null,"categories":["Java"],"content":null,"date":1705590326,"description":"","dir":"post\\Java\\SpringBoot\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1705590326,"objectID":"53bf85f64f6e864bf00e4cbc9b0d84d2","permalink":"http://localhost:1313/7224233674005610515/","publishdate":"2024-01-18T23:05:26+08:00","readingtime":3,"relpermalink":"/7224233674005610515/","section":"post","summary":"网上CV的一个配置，感觉很不错，收藏一下 \u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;UTF-8\u0026#34;?\u0026gt; \u0026lt;!-- scan：当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。","tags":["springboot"],"title":"springboot logbak-spring.xml 配置","type":"post","url":"/7224233674005610515/","weight":0,"wordcount":1012},{"author":null,"categories":["Java"],"content":null,"date":1704799346,"description":"","dir":"post\\Java\\SpringBoot\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1704799346,"objectID":"6f0a4d3f99f302e271e914dc306371fa","permalink":"http://localhost:1313/7224233674005610514/","publishdate":"2024-01-09T19:22:26+08:00","readingtime":2,"relpermalink":"/7224233674005610514/","section":"post","summary":"SpringBoot 整合 腾讯云 API 此处假设腾讯云方面的配置大家都配置完毕了，下面直接开始与代码相关的。 0. 腾讯云 SDK 文档 Java-SDK 中心-腾讯云 (tencent.com) 1. 引入依赖 \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;com.tencentcloudapi\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;tencentcloud-sdk-java\u0026lt;/artifactId\u0026gt; \u0026lt;!-- go to https://search.maven.org/search?q=tencentcloud-sdk-java and get","tags":["springboot"],"title":"SpringBoot 整合 腾讯云 API","type":"post","url":"/7224233674005610514/","weight":0,"wordcount":996},{"author":null,"categories":["Java"],"content":null,"date":1703920766,"description":"","dir":"post\\Java\\SpringBoot\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1703920766,"objectID":"6afd254fa0d828d452bc2c2158f2b8f5","permalink":"http://localhost:1313/7224233674005610513/","publishdate":"2023-12-30T15:19:26+08:00","readingtime":3,"relpermalink":"/7224233674005610513/","section":"post","summary":"SpringBoot 整合 七牛云存储 七牛云的注册及配置这里就不赘述了。 0. 七牛云存储 JavaSDK 官方文档 Java SDK_SDK 下载_对象存储 - 七牛开发者中心 (qiniu.com) 1. 引入依赖 \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;com.qiniu\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;qiniu-java-sdk\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;[7.7.0, 7.10.99]\u0026lt;/version\u0026gt; \u0026lt;/dependency\u0026gt; 这里的ve","tags":["springboot"],"title":"SpringBoot 整合 七牛云存储","type":"post","url":"/7224233674005610513/","weight":0,"wordcount":1413},{"author":null,"categories":["Java"],"content":null,"date":1700744306,"description":"","dir":"post\\Java\\SpringBoot\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":3000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1700744306,"objectID":"832cb2954bd131a0033f2204b69288a5","permalink":"http://localhost:1313/7224246078974263296/","publishdate":"2023-11-23T20:58:26+08:00","readingtime":6,"relpermalink":"/7224246078974263296/","section":"post","summary":"基础： Spring Security 是一个专注于为 Java 应用程序提供身份认证和授权的框架。推荐使用权限认证方式配置：SSM + Shiro;Springboot+SpringSecurity 身份认证（authentication），即","tags":["springboot"],"title":"SpringSecurity之用户认证","type":"post","url":"/7224246078974263296/","weight":0,"wordcount":2986},{"author":null,"categories":["Java"],"content":null,"date":1694853876,"description":"","dir":"post\\Java\\SpringBoot\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1694853876,"objectID":"9626832b407bccef05b8f9afb22e1454","permalink":"http://localhost:1313/7224233674005610512/","publishdate":"2023-09-16T16:44:36+08:00","readingtime":1,"relpermalink":"/7224233674005610512/","section":"post","summary":"SpringBoot 调用第三方接口时的公私钥管理 前言 项目中或多或少的会使用到一些第三方的接口，而调用第三方接口一般会有密钥。例如微信小程序的 appid，sec","tags":["springboot"],"title":"SpringBoot 调用第三方接口时的公私钥管理","type":"post","url":"/7224233674005610512/","weight":0,"wordcount":445},{"author":null,"categories":["Guide"],"content":null,"date":1690514284,"description":"","dir":"post\\guide\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1690514284,"objectID":"34c58b5c22b302ed8a37838425cd755c","permalink":"http://localhost:1313/post/guide/%E5%A4%9A%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7%E6%B1%87%E6%80%BB/","publishdate":"2023-07-28T11:18:04+08:00","readingtime":1,"relpermalink":"/post/guide/%E5%A4%9A%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7%E6%B1%87%E6%80%BB/","section":"post","summary":"汇总一下版本管理工具，如 Jenv，nvm，conda 等","tags":["tools"],"title":"多版本管理工具汇总","type":"post","url":"/post/guide/%E5%A4%9A%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7%E6%B1%87%E6%80%BB/","weight":0,"wordcount":378},{"author":null,"categories":["Guide"],"content":null,"date":1689601660,"description":"","dir":"post\\guide\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1689601660,"objectID":"646ba7e3a12d957a7bc58d274de31afc","permalink":"http://localhost:1313/post/guide/%E4%BC%98%E8%B4%A8java%E5%8D%9A%E5%AE%A2/","publishdate":"2023-07-17T21:47:40+08:00","readingtime":1,"relpermalink":"/post/guide/%E4%BC%98%E8%B4%A8java%E5%8D%9A%E5%AE%A2/","section":"post","summary":"汇总一下Java学习路上的优质Java站点，持续更新……","tags":["top"],"title":"优质Java站点","type":"post","url":"/post/guide/%E4%BC%98%E8%B4%A8java%E5%8D%9A%E5%AE%A2/","weight":0,"wordcount":204},{"author":null,"categories":["Java"],"content":null,"date":1685412986,"description":"","dir":"post\\Java\\SpringBoot\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1685412986,"objectID":"106dc74a08f66d61b474cbf79f594975","permalink":"http://localhost:1313/7224233674005610510/","publishdate":"2023-05-30T10:16:26+08:00","readingtime":3,"relpermalink":"/7224233674005610510/","section":"post","summary":"自定义 @MultiParameterBody 解决 POST 请求时接收多参数问题 背景： 单参数时： 当前端只使用 POST 传一个 String 时一般是这样的： axios({ url: \u0026#39;/xxx\u0026#39;, method: \u0026#39;POST\u0026#39;, data: { str: param } }) 此时只能定义一个实体类对象，其","tags":["springboot"],"title":"自定义 @MultiParameterBody 解决 POST 请求时接收多参数问题","type":"post","url":"/7224233674005610510/","weight":0,"wordcount":1145},{"author":null,"categories":["Java"],"content":null,"date":1685024369,"description":"","dir":"post\\Java\\SpringBoot\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1685024369,"objectID":"692866598633945a1a2b54f866a00e5e","permalink":"http://localhost:1313/7224233674005610511/","publishdate":"2023-05-25T22:19:29+08:00","readingtime":1,"relpermalink":"/7224233674005610511/","section":"post","summary":"IDEA 与 服务器 Linux 开发 最终效果：服务器上有一份与本地相同的代码。 目的： 可随时更新项目并将其运行起来测试。 避免了一个小更新也要在本地打包然后上传并运","tags":["springboot"],"title":"IDEA 与 服务器 Linux 开发","type":"post","url":"/7224233674005610511/","weight":0,"wordcount":212},{"author":null,"categories":["Guide"],"content":null,"date":1680506816,"description":"","dir":"post\\guide\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1680506816,"objectID":"90a9a8e1c1d117835d53e002df5348fd","permalink":"http://localhost:1313/7224233674005610496/","publishdate":"2023-04-03T15:26:56+08:00","readingtime":2,"relpermalink":"/7224233674005610496/","section":"post","summary":"美化 terminal 窗口","tags":["tools"],"title":"WindowsTerminal美化教程","type":"post","url":"/7224233674005610496/","weight":0,"wordcount":927},{"author":null,"categories":["数据结构与算法"],"content":null,"date":1678609042,"description":"","dir":"post\\数据结构与算法\\leetcode\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1678609042,"objectID":"dffd04b0c70264af5a30a2f81d55f52c","permalink":"http://localhost:1313/7224233674005610502/","publishdate":"2023-03-12T16:17:22+08:00","readingtime":5,"relpermalink":"/7224233674005610502/","section":"post","summary":"字符串 反转字符串* 思路： 遍历半个数组，首位进行位置互换。 代码实现： class Solution { public void reverseString(char[] s) { int len = s.length; for (int i = 0; i \u0026lt; len / 2; i++) { char temp = s[i]; s[i] = s[len - 1 - i]; s[len -","tags":["leetcode"],"title":"字符串","type":"post","url":"/7224233674005610502/","weight":0,"wordcount":2450},{"author":null,"categories":["数据结构与算法"],"content":null,"date":1673882052,"description":"","dir":"post\\数据结构与算法\\leetcode\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":3900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1673882052,"objectID":"43ca55f4030563837e01be9ccdcb6350","permalink":"http://localhost:1313/7224233674005610501/","publishdate":"2023-01-16T23:14:12+08:00","readingtime":8,"relpermalink":"/7224233674005610501/","section":"post","summary":"数组 删除排序数组中的重复项 初级算法 - LeetBook - 力扣（LeetCode）删除排序数组中的重复项 思路：双指针（看题解才知道叫双指针） 设 int len = 0; 然后循环","tags":["leetcode"],"title":"数组","type":"post","url":"/7224233674005610501/","weight":0,"wordcount":3805},{"author":null,"categories":["数据结构与算法"],"content":null,"date":1672830705,"description":"","dir":"post\\数据结构与算法\\leetcode\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1672830705,"objectID":"ebd8d034b6fb032934cae3b534991296","permalink":"http://localhost:1313/7224233674005610500/","publishdate":"2023-01-04T19:11:45+08:00","readingtime":4,"relpermalink":"/7224233674005610500/","section":"post","summary":"链表： 删除链表中的节点 思路： 将待删除节点的下一个节点的数据赋值给待删除结点，然后把下一个节点进行常规删除。 代码实现： /** * Definition for singly-linked list. * public class ListNode { *","tags":["leetcode"],"title":"链表","type":"post","url":"/7224233674005610500/","weight":0,"wordcount":1794},{"author":null,"categories":["Java"],"content":null,"date":1669191506,"description":"","dir":"post\\Java\\SSM\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1669191506,"objectID":"27472ef92d00f8622974ad97aba3dfd4","permalink":"http://localhost:1313/7224237482966319107/","publishdate":"2022-11-23T16:18:26+08:00","readingtime":3,"relpermalink":"/7224237482966319107/","section":"post","summary":"首先根据业务拆分成 Permission 和 Club 两个模块。然后在父工程中添加依赖： 1. SpringWeb开发 1.1 添加依赖 \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;org.springframework\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;spring-webmvc\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;5.2.22.RELEASE\u0026lt;/version\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;org.springframework\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;spring-test\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;${spring.version}\u0026lt;/version\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;org.springframework\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;spring-jdbc\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;${spring.version}\u0026lt;/version\u0026gt; \u0026lt;/dependency\u0026gt; 1.2 添加容器启动配置","tags":["ssm"],"title":"SSM+Shiro+Redis纯注解环境搭建","type":"post","url":"/7224237482966319107/","weight":0,"wordcount":1098},{"author":null,"categories":["Java"],"content":null,"date":1664377308,"description":"","dir":"post\\Java\\SpringBoot\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":10400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1664377308,"objectID":"a8acd2b19e14762b1fe49e1cabd4b861","permalink":"http://localhost:1313/7224237482966319104/","publishdate":"2022-09-28T23:01:48+08:00","readingtime":21,"relpermalink":"/7224237482966319104/","section":"post","summary":"快速从 Java 基础到 SpringBoot 后端开发","tags":["top","springboot'"],"title":"SpringBoot+MybatisPlus快速入门","type":"post","url":"/7224237482966319104/","weight":0,"wordcount":10383},{"author":null,"categories":["数据结构与算法"],"content":null,"date":1660284784,"description":"","dir":"post\\数据结构与算法\\树\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":5100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1660284784,"objectID":"e038b7fc0586d31ba2e4246cda4aa6ef","permalink":"http://localhost:1313/7224233674005610498/","publishdate":"2022-08-12T14:13:04+08:00","readingtime":11,"relpermalink":"/7224233674005610498/","section":"post","summary":"完成了B树的代码实现","tags":["top","树"],"title":"B-Tree","type":"post","url":"/7224233674005610498/","weight":0,"wordcount":5028},{"author":null,"categories":["数据结构与算法"],"content":null,"date":1658815984,"description":"","dir":"post\\数据结构与算法\\树\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1658815984,"objectID":"daddbb85efb0bf6ec07b3ba858501e8c","permalink":"http://localhost:1313/7224246078978457602/","publishdate":"2022-07-26T14:13:04+08:00","readingtime":3,"relpermalink":"/7224246078978457602/","section":"post","summary":"B+树的学习","tags":["树"],"title":"红黑树","type":"post","url":"/7224246078978457602/","weight":0,"wordcount":1010},{"author":null,"categories":["Java"],"content":null,"date":1655983091,"description":"","dir":"post\\Java\\Java核心技术卷---笔记\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1655983091,"objectID":"71b362b4a6bce91b2b22799dec80217e","permalink":"http://localhost:1313/7224233674005610504/","publishdate":"2022-06-23T19:18:11+08:00","readingtime":2,"relpermalink":"/7224233674005610504/","section":"post","summary":"《Java核心技术卷》阅读笔记，主要记录了自己学习过程中的遗漏点","tags":["阅读笔记"],"title":"Java核心技术卷二阅读笔记（4.1 ~ ）","type":"post","url":"/7224233674005610504/","weight":0,"wordcount":890},{"author":null,"categories":["Java"],"content":null,"date":1652335984,"description":"","dir":"post\\Java\\Java核心技术卷---笔记\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":10100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1652335984,"objectID":"95b00914e14736819310774eaf323ac8","permalink":"http://localhost:1313/7224233674005610503/","publishdate":"2022-05-12T14:13:04+08:00","readingtime":21,"relpermalink":"/7224233674005610503/","section":"post","summary":"《Java核心技术卷》阅读笔记，主要记录了自己学习过程中的遗漏点","tags":["阅读笔记"],"title":"Java核心技术卷二阅读笔记（1.2 ~ 3.9）","type":"post","url":"/7224233674005610503/","weight":0,"wordcount":10079},{"author":null,"categories":["Java"],"content":null,"date":1652335984,"description":"","dir":"post\\Java\\Java基础\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1652335984,"objectID":"92a6e5d40538aa9b21b790af458883f0","permalink":"http://localhost:1313/7224233674005610508/","publishdate":"2022-05-12T14:13:04+08:00","readingtime":4,"relpermalink":"/7224233674005610508/","section":"post","summary":"废话不多说，上案例代码： public class Main { public static void main(String[] args) { // 先不用管，后面会提到 System.setProperty(\u0026#34;sun.misc.ProxyGenerator.saveGeneratedFiles\u0026#34;, \u0026#34;true\u0026#34;); // 创建一个代理类，该代理类由 Main.class.getClassLoader() 获取到的类加载器加载 // 并且实现 F 接口 // 该","tags":["top","Java基础"],"title":"JDK 的动态代理之源码 DEBUG","type":"post","url":"/7224233674005610508/","weight":0,"wordcount":1807},{"author":null,"categories":["Java"],"content":null,"date":1647785524,"description":"","dir":"post\\Java\\Java核心技术卷---笔记\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":10800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1647785524,"objectID":"6776b2974ab79874e8b202346a32c206","permalink":"http://localhost:1313/7224233674005610506/","publishdate":"2022-03-20T22:12:04+08:00","readingtime":22,"relpermalink":"/7224233674005610506/","section":"post","summary":"《Java核心技术卷》阅读笔记，主要记录了自己学习过程中的遗漏点","tags":["阅读笔记"],"title":"Java核心技术卷一阅读笔记（7.3 ~ 9.5.3）","type":"post","url":"/7224233674005610506/","weight":0,"wordcount":10736},{"author":null,"categories":["Java"],"content":null,"date":1646305905,"description":"","dir":"post\\Java\\Java基础\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1646305905,"objectID":"d4ca8599b83b175efd87676d768c3dde","permalink":"http://localhost:1313/7224233674005610507/","publishdate":"2022-03-03T19:11:45+08:00","readingtime":1,"relpermalink":"/7224233674005610507/","section":"post","summary":"正则表达式 语法介绍： 按照功能分类：（大致 限定符 选择匹配符 分组组合和反向引用符 特殊字符 字符匹配符 定位符 元字符：转意号 \\\\ 需要用到转意符号的字符：","tags":["top","Java基础"],"title":"正则表达式","type":"post","url":"/7224233674005610507/","weight":0,"wordcount":110},{"author":null,"categories":["Java"],"content":null,"date":1642430805,"description":"","dir":"post\\Java\\Java基础\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":3400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1642430805,"objectID":"525ccfb5f46cfd8f51525ad2df3dd00b","permalink":"http://localhost:1313/7224237482966319106/","publishdate":"2022-01-17T22:46:45+08:00","readingtime":7,"relpermalink":"/7224237482966319106/","section":"post","summary":"P521-P525 跟着老韩读源码 感谢韩顺平老师！ 下面是视频地址 【零基础 快速学Java】韩顺平 零基础30天学会Java_哔哩哔哩_bilibili 干就完了！ 以","tags":["top","Java基础"],"title":"HashSet 源码分析","type":"post","url":"/7224237482966319106/","weight":0,"wordcount":3349},{"author":null,"categories":["Java"],"content":null,"date":1640179989,"description":"","dir":"post\\Java\\Java核心技术卷---笔记\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":10500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1640179989,"objectID":"5e178f09598a65db95f1b1fb499b15dc","permalink":"http://localhost:1313/7224233674005610505/","publishdate":"2021-12-22T21:33:09+08:00","readingtime":21,"relpermalink":"/7224233674005610505/","section":"post","summary":"《Java核心技术卷》阅读笔记，主要记录了自己学习过程中的遗漏点","tags":["阅读笔记"],"title":"Java核心技术卷一阅读笔记（1.1 ~ 7.2.5）","type":"post","url":"/7224233674005610505/","weight":0,"wordcount":10423},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"about\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"8576ec274c98b3831668a172fa632d80","permalink":"http://localhost:1313/about/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/about/","section":"","summary":"关于我 一个在校的 Java Coder。 主要方向是 Java后端，就是 Spring 那一套东西了。","tags":null,"title":"","type":"page","url":"/about/","weight":0,"wordcount":37},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"post\\求职\\Java后端\\面经\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"b522e6a21870b8583aa00b09dcb8695c","permalink":"http://localhost:1313/post/%E6%B1%82%E8%81%8C/java%E5%90%8E%E7%AB%AF/%E9%9D%A2%E7%BB%8F/%E4%B8%89%E9%9D%A2/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/post/%E6%B1%82%E8%81%8C/java%E5%90%8E%E7%AB%AF/%E9%9D%A2%E7%BB%8F/%E4%B8%89%E9%9D%A2/","section":"post","summary":"","tags":null,"title":"","type":"post","url":"/post/%E6%B1%82%E8%81%8C/java%E5%90%8E%E7%AB%AF/%E9%9D%A2%E7%BB%8F/%E4%B8%89%E9%9D%A2/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"post\\求职\\Java后端\\面经\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"9457f557100a0e4231c9a99d3b3ce753","permalink":"http://localhost:1313/post/%E6%B1%82%E8%81%8C/java%E5%90%8E%E7%AB%AF/%E9%9D%A2%E7%BB%8F/%E4%BA%8C%E9%9D%A2/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/post/%E6%B1%82%E8%81%8C/java%E5%90%8E%E7%AB%AF/%E9%9D%A2%E7%BB%8F/%E4%BA%8C%E9%9D%A2/","section":"post","summary":"","tags":null,"title":"","type":"post","url":"/post/%E6%B1%82%E8%81%8C/java%E5%90%8E%E7%AB%AF/%E9%9D%A2%E7%BB%8F/%E4%BA%8C%E9%9D%A2/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"search\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"8946788897930c0c0c39fbfcd30ff2e4","permalink":"http://localhost:1313/search/placeholder/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/search/placeholder/","section":"search","summary":"","tags":null,"title":"","type":"search","url":"/search/placeholder/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":"Archive of historical posts.","date":-62135596800,"description":"Archive of historical posts.","dir":"archive\\","excerpt_html":"Archive of historical posts.","excerpt_text":"Archive of historical posts.","expirydate":-62135596800,"fuzzywordcount":100,"html":"Archive of historical posts.","keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"a06e5ce9eca4c3260843078104889780","permalink":"http://localhost:1313/archive/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/archive/","section":"","summary":"","tags":null,"title":"Posts Archive","type":"archive","url":"/archive/","weight":0,"wordcount":0}]